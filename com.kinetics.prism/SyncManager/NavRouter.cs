//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace NAVSCMIntegrator
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NavCustomer", Namespace="http://schemas.datacontract.org/2004/07/NAVSCMIntegrator")]
    public partial class NavCustomer : object
    {
        
        private string CustomerBusGroupField;
        
        private string CustomerIDField;
        
        private string CustomerNamesField;
        
        private string CustomerPhoneNoField;
        
        private string PINNoField;
        
        private string PostingGroupField;
        
        private string RouteSalesAreaField;
        
        private string VATGroupField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBusGroup
        {
            get
            {
                return this.CustomerBusGroupField;
            }
            set
            {
                this.CustomerBusGroupField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID
        {
            get
            {
                return this.CustomerIDField;
            }
            set
            {
                this.CustomerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNames
        {
            get
            {
                return this.CustomerNamesField;
            }
            set
            {
                this.CustomerNamesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPhoneNo
        {
            get
            {
                return this.CustomerPhoneNoField;
            }
            set
            {
                this.CustomerPhoneNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PINNo
        {
            get
            {
                return this.PINNoField;
            }
            set
            {
                this.PINNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostingGroup
        {
            get
            {
                return this.PostingGroupField;
            }
            set
            {
                this.PostingGroupField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteSalesArea
        {
            get
            {
                return this.RouteSalesAreaField;
            }
            set
            {
                this.RouteSalesAreaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VATGroup
        {
            get
            {
                return this.VATGroupField;
            }
            set
            {
                this.VATGroupField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NavProduct", Namespace="http://schemas.datacontract.org/2004/07/NAVSCMIntegrator")]
    public partial class NavProduct : object
    {
        
        private string InventGroupField;
        
        private string ItemTrackngIDField;
        
        private string LocationField;
        
        private string PackField;
        
        private string ProdGroupField;
        
        private string ProductIDField;
        
        private string UOMField;
        
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventGroup
        {
            get
            {
                return this.InventGroupField;
            }
            set
            {
                this.InventGroupField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemTrackngID
        {
            get
            {
                return this.ItemTrackngIDField;
            }
            set
            {
                this.ItemTrackngIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pack
        {
            get
            {
                return this.PackField;
            }
            set
            {
                this.PackField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdGroup
        {
            get
            {
                return this.ProdGroupField;
            }
            set
            {
                this.ProdGroupField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID
        {
            get
            {
                return this.ProductIDField;
            }
            set
            {
                this.ProductIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM
        {
            get
            {
                return this.UOMField;
            }
            set
            {
                this.UOMField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice
        {
            get
            {
                return this.UnitPriceField;
            }
            set
            {
                this.UnitPriceField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/NAVSCMIntegrator/Products", ConfigurationName="INavProduct")]
public interface INavProduct
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/NAVSCMIntegrator/Products/INavProduct/getProductsAll", ReplyAction="http://localhost/NAVSCMIntegrator/Products/INavProduct/getProductsAllResponse")]
    System.IAsyncResult BegingetProductsAll(System.AsyncCallback callback, object asyncState);
    
    NAVSCMIntegrator.NavProduct[] EndgetProductsAll(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/NAVSCMIntegrator/Products/INavProduct/getProductFiltered", ReplyAction="http://localhost/NAVSCMIntegrator/Products/INavProduct/getProductFilteredResponse" +
        "")]
    System.IAsyncResult BegingetProductFiltered(string productCode, System.AsyncCallback callback, object asyncState);
    
    NAVSCMIntegrator.NavProduct EndgetProductFiltered(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface INavProductChannel : INavProduct, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class getProductsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getProductsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public NAVSCMIntegrator.NavProduct[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((NAVSCMIntegrator.NavProduct[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class getProductFilteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getProductFilteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public NAVSCMIntegrator.NavProduct Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((NAVSCMIntegrator.NavProduct)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class NavProductClient : System.ServiceModel.ClientBase<INavProduct>, INavProduct
{
    
    private BeginOperationDelegate onBegingetProductsAllDelegate;
    
    private EndOperationDelegate onEndgetProductsAllDelegate;
    
    private System.Threading.SendOrPostCallback ongetProductsAllCompletedDelegate;
    
    private BeginOperationDelegate onBegingetProductFilteredDelegate;
    
    private EndOperationDelegate onEndgetProductFilteredDelegate;
    
    private System.Threading.SendOrPostCallback ongetProductFilteredCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public NavProductClient()
    {
    }
    
    public NavProductClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public NavProductClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public NavProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public NavProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<getProductsAllCompletedEventArgs> getProductsAllCompleted;
    
    public event System.EventHandler<getProductFilteredCompletedEventArgs> getProductFilteredCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INavProduct.BegingetProductsAll(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetProductsAll(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    NAVSCMIntegrator.NavProduct[] INavProduct.EndgetProductsAll(System.IAsyncResult result)
    {
        return base.Channel.EndgetProductsAll(result);
    }
    
    private System.IAsyncResult OnBegingetProductsAll(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((INavProduct)(this)).BegingetProductsAll(callback, asyncState);
    }
    
    private object[] OnEndgetProductsAll(System.IAsyncResult result)
    {
        NAVSCMIntegrator.NavProduct[] retVal = ((INavProduct)(this)).EndgetProductsAll(result);
        return new object[] {
                retVal};
    }
    
    private void OngetProductsAllCompleted(object state)
    {
        if ((this.getProductsAllCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getProductsAllCompleted(this, new getProductsAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getProductsAllAsync()
    {
        this.getProductsAllAsync(null);
    }
    
    public void getProductsAllAsync(object userState)
    {
        if ((this.onBegingetProductsAllDelegate == null))
        {
            this.onBegingetProductsAllDelegate = new BeginOperationDelegate(this.OnBegingetProductsAll);
        }
        if ((this.onEndgetProductsAllDelegate == null))
        {
            this.onEndgetProductsAllDelegate = new EndOperationDelegate(this.OnEndgetProductsAll);
        }
        if ((this.ongetProductsAllCompletedDelegate == null))
        {
            this.ongetProductsAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductsAllCompleted);
        }
        base.InvokeAsync(this.onBegingetProductsAllDelegate, null, this.onEndgetProductsAllDelegate, this.ongetProductsAllCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INavProduct.BegingetProductFiltered(string productCode, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetProductFiltered(productCode, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    NAVSCMIntegrator.NavProduct INavProduct.EndgetProductFiltered(System.IAsyncResult result)
    {
        return base.Channel.EndgetProductFiltered(result);
    }
    
    private System.IAsyncResult OnBegingetProductFiltered(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string productCode = ((string)(inValues[0]));
        return ((INavProduct)(this)).BegingetProductFiltered(productCode, callback, asyncState);
    }
    
    private object[] OnEndgetProductFiltered(System.IAsyncResult result)
    {
        NAVSCMIntegrator.NavProduct retVal = ((INavProduct)(this)).EndgetProductFiltered(result);
        return new object[] {
                retVal};
    }
    
    private void OngetProductFilteredCompleted(object state)
    {
        if ((this.getProductFilteredCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getProductFilteredCompleted(this, new getProductFilteredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getProductFilteredAsync(string productCode)
    {
        this.getProductFilteredAsync(productCode, null);
    }
    
    public void getProductFilteredAsync(string productCode, object userState)
    {
        if ((this.onBegingetProductFilteredDelegate == null))
        {
            this.onBegingetProductFilteredDelegate = new BeginOperationDelegate(this.OnBegingetProductFiltered);
        }
        if ((this.onEndgetProductFilteredDelegate == null))
        {
            this.onEndgetProductFilteredDelegate = new EndOperationDelegate(this.OnEndgetProductFiltered);
        }
        if ((this.ongetProductFilteredCompletedDelegate == null))
        {
            this.ongetProductFilteredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProductFilteredCompleted);
        }
        base.InvokeAsync(this.onBegingetProductFilteredDelegate, new object[] {
                    productCode}, this.onEndgetProductFilteredDelegate, this.ongetProductFilteredCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override INavProduct CreateChannel()
    {
        return new NavProductClientChannel(this);
    }
    
    private class NavProductClientChannel : ChannelBase<INavProduct>, INavProduct
    {
        
        public NavProductClientChannel(System.ServiceModel.ClientBase<INavProduct> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BegingetProductsAll(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("getProductsAll", _args, callback, asyncState);
            return _result;
        }
        
        public NAVSCMIntegrator.NavProduct[] EndgetProductsAll(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            NAVSCMIntegrator.NavProduct[] _result = ((NAVSCMIntegrator.NavProduct[])(base.EndInvoke("getProductsAll", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BegingetProductFiltered(string productCode, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = productCode;
            System.IAsyncResult _result = base.BeginInvoke("getProductFiltered", _args, callback, asyncState);
            return _result;
        }
        
        public NAVSCMIntegrator.NavProduct EndgetProductFiltered(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            NAVSCMIntegrator.NavProduct _result = ((NAVSCMIntegrator.NavProduct)(base.EndInvoke("getProductFiltered", _args, result)));
            return _result;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/NAVSCMIntegrator/Customers", ConfigurationName="INavCustomer")]
public interface INavCustomer
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/validateCustomer", ReplyAction="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/validateCustomerResponse" +
        "")]
    System.IAsyncResult BeginvalidateCustomer(NAVSCMIntegrator.NavCustomer navCustomer, System.AsyncCallback callback, object asyncState);
    
    bool EndvalidateCustomer(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/createCustomer", ReplyAction="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/createCustomerResponse")]
    System.IAsyncResult BegincreateCustomer(NAVSCMIntegrator.NavCustomer navCustomer, System.AsyncCallback callback, object asyncState);
    
    string EndcreateCustomer(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/parseJsonCustomer", ReplyAction="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/parseJsonCustomerRespons" +
        "e")]
    System.IAsyncResult BeginparseJsonCustomer(string navCustomerData, System.AsyncCallback callback, object asyncState);
    
    NAVSCMIntegrator.NavCustomer EndparseJsonCustomer(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/parseStringCustomer", ReplyAction="http://localhost/NAVSCMIntegrator/Customers/INavCustomer/parseStringCustomerRespo" +
        "nse")]
    System.IAsyncResult BeginparseStringCustomer(string xCustomerID, string xCustomerNames, string xCustomerBusGroup, string xRouteSalesArea, string xPINNo, string xCustomerPhoneNo, string xPostingGroup, string xVATGroup, System.AsyncCallback callback, object asyncState);
    
    NAVSCMIntegrator.NavCustomer EndparseStringCustomer(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface INavCustomerChannel : INavCustomer, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class validateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public validateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class createCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public createCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class parseJsonCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public parseJsonCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public NAVSCMIntegrator.NavCustomer Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((NAVSCMIntegrator.NavCustomer)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class parseStringCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public parseStringCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public NAVSCMIntegrator.NavCustomer Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((NAVSCMIntegrator.NavCustomer)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class NavCustomerClient : System.ServiceModel.ClientBase<INavCustomer>, INavCustomer
{
    
    private BeginOperationDelegate onBeginvalidateCustomerDelegate;
    
    private EndOperationDelegate onEndvalidateCustomerDelegate;
    
    private System.Threading.SendOrPostCallback onvalidateCustomerCompletedDelegate;
    
    private BeginOperationDelegate onBegincreateCustomerDelegate;
    
    private EndOperationDelegate onEndcreateCustomerDelegate;
    
    private System.Threading.SendOrPostCallback oncreateCustomerCompletedDelegate;
    
    private BeginOperationDelegate onBeginparseJsonCustomerDelegate;
    
    private EndOperationDelegate onEndparseJsonCustomerDelegate;
    
    private System.Threading.SendOrPostCallback onparseJsonCustomerCompletedDelegate;
    
    private BeginOperationDelegate onBeginparseStringCustomerDelegate;
    
    private EndOperationDelegate onEndparseStringCustomerDelegate;
    
    private System.Threading.SendOrPostCallback onparseStringCustomerCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public NavCustomerClient()
    {
    }
    
    public NavCustomerClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public NavCustomerClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public NavCustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public NavCustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<validateCustomerCompletedEventArgs> validateCustomerCompleted;
    
    public event System.EventHandler<createCustomerCompletedEventArgs> createCustomerCompleted;
    
    public event System.EventHandler<parseJsonCustomerCompletedEventArgs> parseJsonCustomerCompleted;
    
    public event System.EventHandler<parseStringCustomerCompletedEventArgs> parseStringCustomerCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INavCustomer.BeginvalidateCustomer(NAVSCMIntegrator.NavCustomer navCustomer, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginvalidateCustomer(navCustomer, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool INavCustomer.EndvalidateCustomer(System.IAsyncResult result)
    {
        return base.Channel.EndvalidateCustomer(result);
    }
    
    private System.IAsyncResult OnBeginvalidateCustomer(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        NAVSCMIntegrator.NavCustomer navCustomer = ((NAVSCMIntegrator.NavCustomer)(inValues[0]));
        return ((INavCustomer)(this)).BeginvalidateCustomer(navCustomer, callback, asyncState);
    }
    
    private object[] OnEndvalidateCustomer(System.IAsyncResult result)
    {
        bool retVal = ((INavCustomer)(this)).EndvalidateCustomer(result);
        return new object[] {
                retVal};
    }
    
    private void OnvalidateCustomerCompleted(object state)
    {
        if ((this.validateCustomerCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.validateCustomerCompleted(this, new validateCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void validateCustomerAsync(NAVSCMIntegrator.NavCustomer navCustomer)
    {
        this.validateCustomerAsync(navCustomer, null);
    }
    
    public void validateCustomerAsync(NAVSCMIntegrator.NavCustomer navCustomer, object userState)
    {
        if ((this.onBeginvalidateCustomerDelegate == null))
        {
            this.onBeginvalidateCustomerDelegate = new BeginOperationDelegate(this.OnBeginvalidateCustomer);
        }
        if ((this.onEndvalidateCustomerDelegate == null))
        {
            this.onEndvalidateCustomerDelegate = new EndOperationDelegate(this.OnEndvalidateCustomer);
        }
        if ((this.onvalidateCustomerCompletedDelegate == null))
        {
            this.onvalidateCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnvalidateCustomerCompleted);
        }
        base.InvokeAsync(this.onBeginvalidateCustomerDelegate, new object[] {
                    navCustomer}, this.onEndvalidateCustomerDelegate, this.onvalidateCustomerCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INavCustomer.BegincreateCustomer(NAVSCMIntegrator.NavCustomer navCustomer, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegincreateCustomer(navCustomer, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string INavCustomer.EndcreateCustomer(System.IAsyncResult result)
    {
        return base.Channel.EndcreateCustomer(result);
    }
    
    private System.IAsyncResult OnBegincreateCustomer(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        NAVSCMIntegrator.NavCustomer navCustomer = ((NAVSCMIntegrator.NavCustomer)(inValues[0]));
        return ((INavCustomer)(this)).BegincreateCustomer(navCustomer, callback, asyncState);
    }
    
    private object[] OnEndcreateCustomer(System.IAsyncResult result)
    {
        string retVal = ((INavCustomer)(this)).EndcreateCustomer(result);
        return new object[] {
                retVal};
    }
    
    private void OncreateCustomerCompleted(object state)
    {
        if ((this.createCustomerCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.createCustomerCompleted(this, new createCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void createCustomerAsync(NAVSCMIntegrator.NavCustomer navCustomer)
    {
        this.createCustomerAsync(navCustomer, null);
    }
    
    public void createCustomerAsync(NAVSCMIntegrator.NavCustomer navCustomer, object userState)
    {
        if ((this.onBegincreateCustomerDelegate == null))
        {
            this.onBegincreateCustomerDelegate = new BeginOperationDelegate(this.OnBegincreateCustomer);
        }
        if ((this.onEndcreateCustomerDelegate == null))
        {
            this.onEndcreateCustomerDelegate = new EndOperationDelegate(this.OnEndcreateCustomer);
        }
        if ((this.oncreateCustomerCompletedDelegate == null))
        {
            this.oncreateCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncreateCustomerCompleted);
        }
        base.InvokeAsync(this.onBegincreateCustomerDelegate, new object[] {
                    navCustomer}, this.onEndcreateCustomerDelegate, this.oncreateCustomerCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INavCustomer.BeginparseJsonCustomer(string navCustomerData, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginparseJsonCustomer(navCustomerData, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    NAVSCMIntegrator.NavCustomer INavCustomer.EndparseJsonCustomer(System.IAsyncResult result)
    {
        return base.Channel.EndparseJsonCustomer(result);
    }
    
    private System.IAsyncResult OnBeginparseJsonCustomer(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string navCustomerData = ((string)(inValues[0]));
        return ((INavCustomer)(this)).BeginparseJsonCustomer(navCustomerData, callback, asyncState);
    }
    
    private object[] OnEndparseJsonCustomer(System.IAsyncResult result)
    {
        NAVSCMIntegrator.NavCustomer retVal = ((INavCustomer)(this)).EndparseJsonCustomer(result);
        return new object[] {
                retVal};
    }
    
    private void OnparseJsonCustomerCompleted(object state)
    {
        if ((this.parseJsonCustomerCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.parseJsonCustomerCompleted(this, new parseJsonCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void parseJsonCustomerAsync(string navCustomerData)
    {
        this.parseJsonCustomerAsync(navCustomerData, null);
    }
    
    public void parseJsonCustomerAsync(string navCustomerData, object userState)
    {
        if ((this.onBeginparseJsonCustomerDelegate == null))
        {
            this.onBeginparseJsonCustomerDelegate = new BeginOperationDelegate(this.OnBeginparseJsonCustomer);
        }
        if ((this.onEndparseJsonCustomerDelegate == null))
        {
            this.onEndparseJsonCustomerDelegate = new EndOperationDelegate(this.OnEndparseJsonCustomer);
        }
        if ((this.onparseJsonCustomerCompletedDelegate == null))
        {
            this.onparseJsonCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnparseJsonCustomerCompleted);
        }
        base.InvokeAsync(this.onBeginparseJsonCustomerDelegate, new object[] {
                    navCustomerData}, this.onEndparseJsonCustomerDelegate, this.onparseJsonCustomerCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INavCustomer.BeginparseStringCustomer(string xCustomerID, string xCustomerNames, string xCustomerBusGroup, string xRouteSalesArea, string xPINNo, string xCustomerPhoneNo, string xPostingGroup, string xVATGroup, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginparseStringCustomer(xCustomerID, xCustomerNames, xCustomerBusGroup, xRouteSalesArea, xPINNo, xCustomerPhoneNo, xPostingGroup, xVATGroup, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    NAVSCMIntegrator.NavCustomer INavCustomer.EndparseStringCustomer(System.IAsyncResult result)
    {
        return base.Channel.EndparseStringCustomer(result);
    }
    
    private System.IAsyncResult OnBeginparseStringCustomer(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string xCustomerID = ((string)(inValues[0]));
        string xCustomerNames = ((string)(inValues[1]));
        string xCustomerBusGroup = ((string)(inValues[2]));
        string xRouteSalesArea = ((string)(inValues[3]));
        string xPINNo = ((string)(inValues[4]));
        string xCustomerPhoneNo = ((string)(inValues[5]));
        string xPostingGroup = ((string)(inValues[6]));
        string xVATGroup = ((string)(inValues[7]));
        return ((INavCustomer)(this)).BeginparseStringCustomer(xCustomerID, xCustomerNames, xCustomerBusGroup, xRouteSalesArea, xPINNo, xCustomerPhoneNo, xPostingGroup, xVATGroup, callback, asyncState);
    }
    
    private object[] OnEndparseStringCustomer(System.IAsyncResult result)
    {
        NAVSCMIntegrator.NavCustomer retVal = ((INavCustomer)(this)).EndparseStringCustomer(result);
        return new object[] {
                retVal};
    }
    
    private void OnparseStringCustomerCompleted(object state)
    {
        if ((this.parseStringCustomerCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.parseStringCustomerCompleted(this, new parseStringCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void parseStringCustomerAsync(string xCustomerID, string xCustomerNames, string xCustomerBusGroup, string xRouteSalesArea, string xPINNo, string xCustomerPhoneNo, string xPostingGroup, string xVATGroup)
    {
        this.parseStringCustomerAsync(xCustomerID, xCustomerNames, xCustomerBusGroup, xRouteSalesArea, xPINNo, xCustomerPhoneNo, xPostingGroup, xVATGroup, null);
    }
    
    public void parseStringCustomerAsync(string xCustomerID, string xCustomerNames, string xCustomerBusGroup, string xRouteSalesArea, string xPINNo, string xCustomerPhoneNo, string xPostingGroup, string xVATGroup, object userState)
    {
        if ((this.onBeginparseStringCustomerDelegate == null))
        {
            this.onBeginparseStringCustomerDelegate = new BeginOperationDelegate(this.OnBeginparseStringCustomer);
        }
        if ((this.onEndparseStringCustomerDelegate == null))
        {
            this.onEndparseStringCustomerDelegate = new EndOperationDelegate(this.OnEndparseStringCustomer);
        }
        if ((this.onparseStringCustomerCompletedDelegate == null))
        {
            this.onparseStringCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnparseStringCustomerCompleted);
        }
        base.InvokeAsync(this.onBeginparseStringCustomerDelegate, new object[] {
                    xCustomerID,
                    xCustomerNames,
                    xCustomerBusGroup,
                    xRouteSalesArea,
                    xPINNo,
                    xCustomerPhoneNo,
                    xPostingGroup,
                    xVATGroup}, this.onEndparseStringCustomerDelegate, this.onparseStringCustomerCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override INavCustomer CreateChannel()
    {
        return new NavCustomerClientChannel(this);
    }
    
    private class NavCustomerClientChannel : ChannelBase<INavCustomer>, INavCustomer
    {
        
        public NavCustomerClientChannel(System.ServiceModel.ClientBase<INavCustomer> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginvalidateCustomer(NAVSCMIntegrator.NavCustomer navCustomer, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = navCustomer;
            System.IAsyncResult _result = base.BeginInvoke("validateCustomer", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndvalidateCustomer(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("validateCustomer", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BegincreateCustomer(NAVSCMIntegrator.NavCustomer navCustomer, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = navCustomer;
            System.IAsyncResult _result = base.BeginInvoke("createCustomer", _args, callback, asyncState);
            return _result;
        }
        
        public string EndcreateCustomer(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("createCustomer", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginparseJsonCustomer(string navCustomerData, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = navCustomerData;
            System.IAsyncResult _result = base.BeginInvoke("parseJsonCustomer", _args, callback, asyncState);
            return _result;
        }
        
        public NAVSCMIntegrator.NavCustomer EndparseJsonCustomer(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            NAVSCMIntegrator.NavCustomer _result = ((NAVSCMIntegrator.NavCustomer)(base.EndInvoke("parseJsonCustomer", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginparseStringCustomer(string xCustomerID, string xCustomerNames, string xCustomerBusGroup, string xRouteSalesArea, string xPINNo, string xCustomerPhoneNo, string xPostingGroup, string xVATGroup, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[8];
            _args[0] = xCustomerID;
            _args[1] = xCustomerNames;
            _args[2] = xCustomerBusGroup;
            _args[3] = xRouteSalesArea;
            _args[4] = xPINNo;
            _args[5] = xCustomerPhoneNo;
            _args[6] = xPostingGroup;
            _args[7] = xVATGroup;
            System.IAsyncResult _result = base.BeginInvoke("parseStringCustomer", _args, callback, asyncState);
            return _result;
        }
        
        public NAVSCMIntegrator.NavCustomer EndparseStringCustomer(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            NAVSCMIntegrator.NavCustomer _result = ((NAVSCMIntegrator.NavCustomer)(base.EndInvoke("parseStringCustomer", _args, result)));
            return _result;
        }
    }
}
